{"ast":null,"code":"function yesyes(room_id, plan_id) {\n  var day = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  $('#calendar').fullCalendar({\n    //カレンダーの表示\n    events: {\n      //日ごとの情報をイベントとして取得\n      url: '/events.json',\n      type: 'GET',\n      data: {\n        room_id: room_id,\n        plan_id: plan_id,\n        day: day\n      },\n      success: function success() {},\n      error: function error() {\n        alert('there was an error while fetching events!');\n      }\n    },\n    eventRender: function eventRender(event, element, view) {\n      //取得したイベントの見た目の設定、event,element,view にはそれぞれイベントの情報が入っている\n      if (view.title.length == 9) {\n        var view_m = Number(view.title.slice(5, 8));\n      } else {\n        var view_m = Number(view.title.slice(5, 7));\n      }\n\n      if (Number(event.start._i.slice(5, 7)) != view_m) {\n        // eventの日付がカレンダーが表示されている月ではなかったらイベントを記載しないように\n        return false;\n      }\n\n      if (event.title.match(/\\d/) != null) {\n        //予約可能日は数字を含むよう設定したためtrueが予約可能日\n        var day = event.start._i;\n        var target = $(\"[data-date=\".concat(day, \"]\"));\n        $(target[0]).addClass(\"can_reserve_day\");\n        $(\".fc-event-container\").find(\"can_reserve\");\n\n        if (now_reses.indexOf(day) >= 0) {\n          //now_resesには現在の選択日が入っている。\n          $(event.currentTarget).addClass(\"selected_day\");\n          $(target[0]).addClass(\"selected_day\");\n          $(element[0]).addClass(\"selected_day\");\n        }\n\n        ;\n      }\n    },\n    header: {\n      left: 'prev',\n      center: 'title',\n      right: 'next'\n    },\n    Boolean: Boolean,\n    \"default\": true,\n    showNonCurrentDates: true,\n    fixedWeekCount: false,\n    eventClick: function eventClick(calEvent, jsEvent, view) {\n      //イベントクリック時の挙動\n      select_day(calEvent, jsEvent, view);\n    },\n    eventMouseover: function eventMouseover(calEvent, jsEvent, view) {\n      //イベントマウスオーバー時\n      over_day(calEvent, jsEvent, view);\n    },\n    eventMouseout: function eventMouseout(calEvent, jsEvent, view) {\n      out_day(calEvent, jsEvent, view);\n    }\n  });\n}","map":{"version":3,"sources":["/Users/fujishimatarou/Ruby/learn-ruby-on-Rails/labo/cordinator/app/javascript/packs/calendar.js"],"names":["yesyes","room_id","plan_id","day","$","fullCalendar","events","url","type","data","success","error","alert","eventRender","event","element","view","title","length","view_m","Number","slice","start","_i","match","target","addClass","find","now_reses","indexOf","currentTarget","header","left","center","right","Boolean","showNonCurrentDates","fixedWeekCount","eventClick","calEvent","jsEvent","select_day","eventMouseover","over_day","eventMouseout","out_day"],"mappings":"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","sourcesContent":["function yesyes(room_id, plan_id, day = 0) {$('#calendar').fullCalendar({ //カレンダーの表示\n\n    events: { //日ごとの情報をイベントとして取得\n\n      url: '/events.json',\n      type: 'GET',\n      data: {\n        room_id: room_id,\n        plan_id: plan_id,\n        day: day,\n\n      },\n      success: function(){\n\n      },\n      error: function() {\n        alert('there was an error while fetching events!');\n      },\n    },\n\n    eventRender: function (event, element, view) { //取得したイベントの見た目の設定、event,element,view にはそれぞれイベントの情報が入っている\n\n      if (view.title.length == 9) {\n        var view_m = Number(view.title.slice(5, 8))\n      }\n      else{\n        var view_m = Number(view.title.slice(5, 7))\n      }\n\n      if (Number(event.start._i.slice(5, 7)) !=  view_m) {\n         // eventの日付がカレンダーが表示されている月ではなかったらイベントを記載しないように\n         return false;\n      }\n\n      if (event.title.match(/\\d/) != null){//予約可能日は数字を含むよう設定したためtrueが予約可能日\n        var day = event.start._i\n        var target = $(`[data-date=${day}]`)\n\n        $(target[0]).addClass(\"can_reserve_day\")\n\n        $(\".fc-event-container\").find(\"can_reserve\")\n        if(now_reses.indexOf(day) >= 0){//now_resesには現在の選択日が入っている。\n          $(event.currentTarget).addClass(\"selected_day\")\n          $(target[0]).addClass(\"selected_day\")\n          $(element[0]).addClass(\"selected_day\")\n\n        };\n      }\n    },\n\n    header: {\n      left: 'prev',\n      center: 'title',\n      right: 'next',\n    },\n\n\n    Boolean, default: true,\n    showNonCurrentDates: true,\n    fixedWeekCount: false,\n\n\n    eventClick: function(calEvent, jsEvent, view) {　//イベントクリック時の挙動\n\n      select_day(calEvent, jsEvent, view)\n\n    },\n\n    eventMouseover: function(calEvent, jsEvent, view) { //イベントマウスオーバー時\n      over_day(calEvent, jsEvent, view)\n\n    },\n\n    eventMouseout: function(calEvent, jsEvent, view) {\n      out_day(calEvent, jsEvent, view)\n\n    },\n\n  })}"]},"metadata":{},"sourceType":"module"}